Parameters:
  StackPrefix:
    Type: String
    Description: Unique prefix used in related stacks for use by export
  Stage:
    Type: String
    Description: Deployment stage
  ProjectTag:
    Type: String
    Description: Project tag
  BatchAMI:
    Type: AWS::EC2::Image::Id
    Description: AMI Image ID configured to use specific EFS Volume
  BatchClusterEC2MinCpus:
    Type: String
    Description: Minimum EC2 cluster size
  BatchClusterEC2MaxCpus:
    Type: String
    Description: Maximum EC2 cluster size
  BatchClusterEC2DesiredCpus:
    Type: String
    Description: Desired EC2 cluster size
  BatchClusterSpotMinCpus:
    Type: String
    Description: Minimum Spot cluster size
  BatchClusterSpotMaxCpus:
    Type: String
    Description: Maximum Spot cluster size
  BatchClusterSpotDesiredCpus:
    Type: String
    Description: Desired Spot cluster size
  BatchClusterSpotBidPercentage:
    Type: String
    Description: Spot cluster maximum bid percentage
  SubnetsPublic:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Public subnet IDs. Must be exactly two!

Resources:

  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${StackPrefix}-${Stage}-BatchServiceRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  BatchInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${StackPrefix}-${Stage}-BatchInstanceRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  BatchInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref BatchInstanceRole
      InstanceProfileName: !Sub ${StackPrefix}-${Stage}-BatchInstanceProfile

  BatchSpotFleetRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${StackPrefix}-${Stage}-BatchSpotFleetRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: spotfleet.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole

  BatchRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${StackPrefix}-${Stage}-BatchRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${StackPrefix}-${Stage}-BatchRolePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: s3:ListBucket
                Resource:
                  - Fn::ImportValue:
                      !Sub ${StackPrefix}-${Stage}-S3BucketRawARN
                  - Fn::ImportValue:
                      !Sub ${StackPrefix}-${Stage}-S3BucketTileARN
              - Effect: Allow
                Action: s3:GetObject
                Resource:
                  - Fn::Sub:
                    - "${S3BucketRawARN}/*"
                    - S3BucketRawARN:
                        Fn::ImportValue:
                          !Sub ${StackPrefix}-${Stage}-S3BucketRawARN
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetObject
                Resource:
                  - Fn::Sub:
                    - "${S3BucketTileARN}/*"
                    - S3BucketTileARN:
                        Fn::ImportValue:
                          !Sub ${StackPrefix}-${Stage}-S3BucketTileARN
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StackPrefix}/${Stage}/*"
              - Effect: Allow
                Action: states:StartExecution
                Resource: !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${StackPrefix}-${Stage}-ExtractSM"
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${StackPrefix}-${Stage}-setFilesetComplete"

  # EC2 Compute Environment
  Ec2Env:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeEnvironmentName: !Sub ${StackPrefix}-${Stage}-ec2
      ServiceRole: !GetAtt BatchServiceRole.Arn
      ComputeResources:
        Type: EC2
        MinvCpus: !Ref BatchClusterEC2MinCpus
        MaxvCpus: !Ref BatchClusterEC2MaxCpus
        DesiredvCpus: !Ref BatchClusterEC2DesiredCpus
        InstanceRole: !GetAtt BatchInstanceProfile.Arn
        ImageId: !Ref BatchAMI
        InstanceTypes:
          - optimal
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub ${StackPrefix}-${Stage}-GeneralSGID
        Subnets: !Ref SubnetsPublic
        Tags:
          project: !Ref ProjectTag
      State: ENABLED

  # Spot Compute Environment
  SpotEnv:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeEnvironmentName: !Sub ${StackPrefix}-${Stage}-spot
      ServiceRole: !GetAtt BatchServiceRole.Arn
      ComputeResources:
        Type: SPOT
        MinvCpus: !Ref BatchClusterSpotMinCpus
        MaxvCpus: !Ref BatchClusterSpotMaxCpus
        DesiredvCpus: !Ref BatchClusterSpotDesiredCpus
        InstanceRole: !GetAtt BatchInstanceProfile.Arn
        ImageId: !Ref BatchAMI
        InstanceTypes:
          - optimal
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub ${StackPrefix}-${Stage}-GeneralSGID
        Subnets: !Ref SubnetsPublic
        Tags:
          project: !Ref ProjectTag
        SpotIamFleetRole: !GetAtt BatchSpotFleetRole.Arn
        BidPercentage: !Ref BatchClusterSpotBidPercentage
      State: ENABLED

  # Job Queue
  JobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Sub ${StackPrefix}-${Stage}-queue
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref SpotEnv
          Order: 1
        - ComputeEnvironment: !Ref Ec2Env
          Order: 2
      Priority: 10

  # S3 Sync Job Definition
  SyncJobDef:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      JobDefinitionName: !Sub ${StackPrefix}-${Stage}-sync
      ContainerProperties:
        Environment:
          - Name: STACKPREFIX
            Value: !Ref StackPrefix
          - Name: STAGE
            Value: !Ref Stage
        MountPoints:
          - ReadOnly: false
            SourceVolume: efs
            ContainerPath: /tmp/aws
        Volumes:
          - Host:
              SourcePath: /mnt/efs
            Name: efs
        Command:
          - s3
          - sync
          - Ref::s3uri
          - Ref::dir
        Memory: 256
        JobRoleArn: !GetAtt BatchRole.Arn
        Vcpus: 1
        Image: sorgerlab/awscli:latest
      RetryStrategy:
        Attempts: 2

  # Bio-Formats Scan Job Definition
  BFScanJobDef:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      JobDefinitionName: !Sub ${StackPrefix}-${Stage}-bfscan
      ContainerProperties:
        Environment:
          - Name: STACKPREFIX
            Value: !Ref StackPrefix
          - Name: STAGE
            Value: !Ref Stage
        MountPoints:
          - ReadOnly: false
            SourceVolume: efs
            ContainerPath: /tmp/aws
        Volumes:
          - Host:
              SourcePath: /mnt/efs
            Name: efs
        Command:
          - Ref::dir
        Memory: 512
        JobRoleArn: !GetAtt BatchRole.Arn
        Vcpus: 1
        Image: dpwrussell/bfscanner:latest
      RetryStrategy:
        Attempts: 2

  # Bio-Formats Extract Job Definition
  BFExtractJobDef:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      JobDefinitionName: !Sub ${StackPrefix}-${Stage}-bfextract
      ContainerProperties:
        Environment:
          - Name: STACKPREFIX
            Value: !Ref StackPrefix
          - Name: STAGE
            Value: !Ref Stage
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region

        MountPoints:
          - ReadOnly: false
            SourceVolume: efs
            ContainerPath: /tmp/aws
        Volumes:
          - Host:
              SourcePath: /mnt/efs
            Name: efs
        Command:
          - Ref::dir
          - Ref::file
          - Ref::reader
          - Ref::reader_software
          - Ref::reader_version
          - Ref::bucket
          - Ref::fileset_uuid
        Memory: 1024
        JobRoleArn: !GetAtt BatchRole.Arn
        Vcpus: 1
        Image: dpwrussell/bfextractor:latest
      RetryStrategy:
        Attempts: 2

  # SSM
  JobQueueARN:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${StackPrefix}/${Stage}/batch/JobQueueARN
      Description: Job Queue ARN
      Type: String
      Value: !Ref JobQueue

  SyncJobDefinitionARN:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${StackPrefix}/${Stage}/batch/SyncJobDefinitionARN
      Description: Sync Job Definition ARN
      Type: String
      Value: !Ref SyncJobDef

  BFScanJobDefinitionARN:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${StackPrefix}/${Stage}/batch/BFScanJobDefinitionARN
      Description: Bio-Formats Scan Job Definition ARN
      Type: String
      Value: !Ref BFScanJobDef

  BFExtractJobDefinitionARN:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${StackPrefix}/${Stage}/batch/BFExtractJobDefinitionARN
      Description: Bio-Formats Extract Job Definition ARN
      Type: String
      Value: !Ref BFExtractJobDef

Outputs:
  JobQueueARN:
    Description: Job Queue ARN
    Value: !Ref JobQueue
    Export:
      Name: !Sub ${StackPrefix}-${Stage}-batch-JobQueueARN
  SyncJobDefinitionARN:
    Description: Sync Job Definition ARN
    Value: !Ref SyncJobDef
    Export:
      Name: !Sub ${StackPrefix}-${Stage}-batch-SyncJobDefinitionARN
  BFScanJobDefinitionARN:
    Description: Bio-Formats Scan Job Definition ARN
    Value: !Ref BFScanJobDef
    Export:
      Name: !Sub ${StackPrefix}-${Stage}-batch-BFScanJobDefinitionARN
  BFExtractJobDefinitionARN:
    Description: Bio-Formats Extract Job Definition ARN
    Value: !Ref BFExtractJobDef
    Export:
      Name: !Sub ${StackPrefix}-${Stage}-batch-BFExtractJobDefinitionARN
